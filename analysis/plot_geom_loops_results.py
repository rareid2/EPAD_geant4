import numpy as np
from plot_settings import *
import matplotlib.pyplot as plt 
import matplotlib as mpl
from matplotlib.patches import Ellipse, Circle 
import matplotlib.colors as colors
import seaborn as sns 
from os import listdir
from os.path import isfile, join

# ------------------------plotting function!-----------------------------
def plot_it(resolutions_list, labels, mt, color):
    sns.set_palette("Paired")
    mask_distance =[0.5, 1.44, 2.39, 3.33, 4.28, 5.22, 6.17, 7.11, 8.06, 9] #cm
    mask_distance = [0,1,2,3,4] #cm
    
    # fix figure size
    fig, ax = plt.subplots(figsize=(5,2.8))
    ii=0
    for resolutions,label in zip(resolutions_list,labels):
        ii+=1
        #if ii==3:
        #    mask_distance = mask_distance[:-2]
        plt.plot(mask_distance,resolutions,label=label,linestyle='dashed', marker='s')
    
    plt.legend(loc='lower right')
    #plt.xlabel('distance between mask and detector [cm]')
    plt.xlabel('steps from center of mask')
    
    #plt.ylabel('snr')
    plt.ylabel('ang res [deg]')
    #plt.title(str(mt)+'um',color=color)
    plt.ylim([2,5])

    abs_path = "/home/rileyannereid/workspace/geant4/EPAD_geant4"
    fname_save = 'results/fall21_results/ptsrcdiff/'+str(mt)+'_angres_fov_1.png'
    fname_save = 'results/fall21_results/ptsrcdiff/angres_fov_1.png'

    fig.tight_layout(pad=0.1)
    plt.savefig(fname_save)
    plt.clf()

# MOSAIC SIM 2

# snr no unc
#res37 = [85.14574519044702, 77.57601790331046, 69.5677275703931, 61.62634848402457, 54.07729955634852, 47.34961301152623, 40.913059459811436, 35.279104329850426, 30.263764903650134, 25.959645177377407]
#res67 = [183.82573432939296, 143.90339280809036, 111.90124039102614, 86.4536138410267, 68.15897748940937, 55.50529747208585, 45.69385425874274, 38.18286518231614, 32.55781580493833, 27.905915195660928]
#res97 = [139.22106783680655, 113.19671458046007, 86.25886262322909, 63.04106366735407, 45.17690126297594, 31.728662563087752, 21.788439631453258, 17.075661549368636, 15.843216587559352, 15.251194707975065]

# res no unc
#res37 = [7,7,5.7,4.4,3.56,2.94,2.6,2.33,2.2,2.15]
#res67 = [7,6.5,3.9,3.25,2.6,2.33,2.2,2.1,2.1,2]
#res97 = [7,4.78,2.94,2.33,2.2,2.33,2.33,2.33]

# res full unc 
#res37 = [7,7,7,5.39,4.17,3.4,2.94,2.6,2.3,2.1]
#res67 = [7,7,7,5.5,4.4,3.56,3,2.6,2.33,2.33]
#res97 = [7,7,7,5.39,3.8,3.25,2.7,2.6,2.1,2.1]

# snr full unc
#res37 = [29.768897851967626, 31.520996367108605, 32.37845814185881, 33.33420535924378, 34.053387229557636, 35.28338104045071, 35.25719355765658, 35.093295873278755, 34.83814274099119, 35.06107099705544]
#res67 = [30.805375840220805, 30.299999521282366, 31.906870575181884, 33.3372091295691, 34.38772352169916, 35.0699938545987, 35.58844884212822, 36.343406567313586, 36.254516506342576, 35.03262653446456]
#res97 = [16.969770924133766, 16.62632418391797, 19.196996040769154, 19.377353544610045, 19.127117502290613, 20.52422635713535, 20.700312337848768, 21.36897802468622, 21.198592075049415, 20.481623546363437]

# FOV SIM 1
res37 = [3.75,3.5,3.75,3.75,3.75]
res67 = [3.75,3.5,3.75,3.75,3.75]
res97 = [3.75,3.75,3.75,3.75,3.75]
res17 = [3.75,3.5,3.75,3.75,4]
res27 = [3.75,4,4,4,4]

resolutions_list = []
resolutions_list.append(res37)
resolutions_list.append(res67)
resolutions_list.append(res97)
resolutions_list.append(res17)
resolutions_list.append(res27)

colors = ['#D8F793', '#A0CA92', '#75B09C', '#998650', '#E0BE36']
labels=['37','67','97',]
labels=['400','1125','1850','2575','3300']


plot_it(resolutions_list, labels, '', colors[0])

# FOV RESULTS
#mask_distance =[0.5, 1.44, 2.39, 3.33, 4.28, 5.22, 6.17, 7.11, 8.06, 9]
#fov = np.rad2deg(2*np.arctan(2.25/np.array(mask_distance)))
#print(fov)

# THEORETICAL RESOLUTION RESULTS
#mask_distance =[0.5, 1.44, 2.39, 3.33, 4.28, 5.22, 6.17, 7.11, 8.06, 9]
#mask_distance = np.array(mask_distance)
#res37 = np.rad2deg(2*np.arctan(0.7/(mask_distance*10)))

"""
# TESTING OUT EFFECTS OF MULTIPLIER
snr = [46.67646510331772, 47.15571571258946, 47.24306184632158, 47.201213918118384, 47.288350627500016, 47.362589550254135, 47.29032007687495, 47.32614339667168, 47.32651279330295, 47.3096293970681]

# SECOND RUN W MOSAIC
#res37 = [7,7,7, 4.77, 3.56, 2.94, 2.94, 2.33, 2.33, 1.72]
#res67 = [7,6,3.56,2.94,2.33,1.72,1.72,1.72,1.72,1.72]
#res97 = [7,4.77,2.94,2.33,1.72,1.72]
#res37 = [24.69713853950948, 24.488838567136217, 24.644447214520973, 24.237698695582708, 24.33503370226509, 24.011880259471308, 23.250541006171517, 22.18649538943293, 20.5670269778585, 18.64585516428993]
#res67 = [26.3433062107236, 26.59901302706436, 26.135633484979024, 23.479693171334546, 21.023476926254016, 18.276000688291976, 14.74217124408682, 13.290218350982476, 11.74048575128394, 10.974039156438726]
#res97 = [22.171116987854564, 21.204089932305596, 18.60928123828962, 17.1136191638422, 14.599175960062597, 12.41820719222212, 10.415736726724054, 8.735545194877687, 7.865184896622974, 7.614807855137089]


# parameter ranges
mask_thickness = np.linspace(400,3300,3) #um
mask_distance = np.linspace(0.5,6,5) #cm
mask_rank = [61,101,139,181]
labels = ['61','101','139','181']
colors = ['#FFDC5E', '#DC493A', '#CB9CF2']

# note that only integer values possible
resolutions_list = []

# FOR FIRST RUN NO MOSAIC
# for 400um
#res_61 = [8,6,4,3,3]
#res_101 = [8,4,3,1,2]
#res_139 = [8,4,3,2,3]
#res_181 = [8,3,2,3,4]

# for 400um w uncertainty
#res_61 = [8,8,5,4,3]
#res_101 = [8,8,5,4,3]
#res_139 = [8,8,5,4,3]
#res_181 = [8,6,4,4,3]

# for 1850um
#res_61 = [8,6,4,3,3]
#res_101 = [8,4,3,3,2]
#res_139 = [8,4,3,3,3]
#res_181 = [8,3,2,3,3]

# for 1850um w uncertainty
#res_61 = [8,8,5,4,3]
#res_101 = [8,8,5,4,3]
#res_139 = [8,8,5,4,3]
#res_181 = [8,7,5,4,3]

# for 3300um 
#res_61 = [8,7,4,3,3]
#res_101 = [8,5,3,2,2]
#res_139 = [8,4,3,3,3]
#res_181 = [8,3,3,3,3]

# for 3300um w uncertainty
#res_61 = [8,8,6,4,3]
#res_101 = [8,8,6,4,3]
#res_139 = [8,8,5,4,3]
#res_181 = [8,7,5,5,3]

# SNR
# 400um
res_61 = [54.86918689072489, 52.51162116079835, 45.381033372515915, 34.03872948181812, 24.66703898631042]
res_101 = [74.76376626699493, 61.99754121536994, 37.800493676521704, 21.48060378345827, 15.399927374040669]
res_139 = [73.61874113304235, 49.56877946068146, 26.61356018364926, 17.14249246168529, 16.742452520098706]
res_181 = [63.03732030456078, 39.38148860450789, 21.13707297961793, 12.245596317080794, 11.260043012758356]

# 1850um
res_61 = [54.925413971890215, 52.70438970612835, 45.57567550656722, 34.684714722889495, 25.287101671758986]
res_101 = [74.85153758835942, 63.276931328669804, 39.041547281720796, 22.054314027788887, 15.217523510901648]
res_139 = [74.72716663132432, 51.95822513023131, 27.468386087240262, 17.866358476995774, 16.65592352822767]
res_181 = [65.00638160245897, 42.046411770870144, 21.994475740030584, 12.38721964438829, 11.032613989677284]


# 3300um
res_61 = [54.80934678956001, 53.004660477157195, 46.11269023871586, 35.29992456557015, 25.537422085005566]
res_101 = [75.26808814558342, 64.26244959966719, 40.55008048662667, 23.097999929535757, 14.84991942056127]
res_139 = [75.92172412437404, 54.06934313982156, 28.82584889004756, 17.818196873033976, 16.796538109387345]
res_181 = [66.13270296955385, 44.6048049824886, 23.3297086278307, 12.03525047484963, 11.136965452465635]


# with uncertainty
# 400
res_61 = [28.46439872728806, 32.226020279191616, 34.53322312703455, 34.568898718915406, 34.82456726859576]
res_101 = [17.60005097690467, 19.564625462930845, 22.857753227520707, 22.427730233721196, 23.247480086189306]
res_139 = [14.0139240405507, 14.937421901038388, 16.20987585643321, 14.968469108792284, 15.699913570798126]
res_181 = [10.68641774848388, 12.709144936490388, 13.447124999263707, 13.22213453668203, 12.636234230492326]

# 1850
res_61 = [28.53797599647956, 32.45460469693967, 34.1688905159045, 35.46286152404505, 33.81238077261387]
res_101 = [17.867286947113875, 19.446914865625338, 21.59274692459884, 21.57987465660968, 21.093712184783403]
res_139 = [15.175910197275405, 15.367224454650616, 16.465194922401416, 17.533795022566025, 16.489064610154436]
res_181 = [10.722457021440963, 11.922995636381268, 12.131644830437425, 12.906542936654592, 12.871437742547998]

# 3300
res_61 = [28.492328411585678, 32.74742175758, 34.74118131715422, 34.53361682261932, 34.010666389087966]
res_101 = [20.16846867120859, 21.240231486917207, 22.749280756314132, 21.945145304624905, 22.49972059910511]
res_139 = [15.77608337088403, 16.352284403938654, 15.55804531513328, 16.54245414828009, 16.69873272283704]
res_181 = [12.160887188496043, 12.258723484625182, 14.310138710244141, 13.016145032403555, 13.186880988830563]


resolutions_list.append(res_61)
resolutions_list.append(res_101)
resolutions_list.append(res_139)
resolutions_list.append(res_181)

mask_thickness = np.linspace(400,3300,3) #um
mask_distance = np.linspace(0.5,6,5) #cm
mask_rank = [61,101,139,181]

plot_it(resolutions_list, labels, 3300, colors[2])
"""

"""
# start with theoretical first
for mi,mt in enumerate(mask_thickness):
    th_resolutions = []
    labels = []
    for mr in mask_rank:
        pixel_size = round(63/mr,4)
        th_res = 2*np.rad2deg(np.arctan((pixel_size/2)/(np.array(mask_distance - (mt*1e-4))*10)))

        th_resolutions.append(th_res)
        labels.append(str(mr))

    plot_it(th_resolutions, labels, round(mt), colors[mi])
"""

# mosaic sim
#snr37 = [41.35912563116363, 40.01710648677783, 38.22367400837808, 36.12882975956071, 33.71305833204814, 31.234713098894712, 28.464791907673778, 25.736970164195547, 23.02820739515514, 20.54323181402365]
#snr67 = [65.94112817322102, 60.7094269870365, 54.41093577203837, 47.311908732446405, 40.82191361094087, 35.5887390312394, 30.991817552371327, 27.1094542484778, 24.101777566813723, 21.438461413428815]
#snr97 = [77.77239628738938, 70.14623828972114, 59.55934255684601, 47.82137880389763, 36.70791144790471, 27.167768055854815, 19.34553267026915, 15.496873305881074, 14.524128815041, 14.084341438219749]

#res37 = [7,7,4.4,3.8,2.94,2.6,2.33,2.33,2.1,1.72]
#res67 = [7,5.39,3.56,2.94,2.33,2.33,2.1,1.72,1.72,1.72]
#res97 = [7,4.17,2.6,2.33,2.1,2.33,2.33,1.72,1.72,1.72]

# with half uncertainty
#snr37 = [36.37520737421257, 35.85885133815506, 36.36867623836522, 37.12155647190645, 37.16615676395132, 37.05375269593881, 36.16342217256107, 35.09167940650831, 33.39823203245489, 31.1918968272303]
#snr67 = [48.42880984447355, 49.655416216272826, 49.852996522349386, 50.160184537007794, 48.62424610058463, 47.22701939082366, 45.43214064396918, 42.914052088699435, 40.36885381137177, 37.076844811752565]
#snr97 = [39.32331477095646, 42.07068728278894, 42.84011568487218, 44.66382436527047, 44.84685353298426, 42.701924569936764, 39.803684175840324, 35.64954919830786, 30.98709032172263, 27.426467845330073]

#res37 = [7,7,4.4,3.56,2.94,2.33,2.33,1.72,1.72,1.72]
#res67 = [7,7,3.8,2.94,2.33,2.1,1.72,1.72,1.5,1.3]
#res97 = [7,6,3.56,2.6,2.1,1.72,1.72,1.5,1.3,1.11]

# with full uncertainty
#snr37 = [23.065157919612215, 23.292694824942327, 23.9710524230532, 24.320227641175897, 24.45193335486863, 24.492763538786143, 24.453613994094063, 24.334442629591944, 24.530962037498494, 24.817399842022798]
#snr67 = [23.35070954160084, 23.81635032626507, 24.149183877368568, 24.54816542963103, 25.38017466614942, 25.418610851026052, 25.578186392070247, 25.862823688653485, 25.80733349319295, 25.414651573973366]
#snr97 = [15.904713776509059, 16.621471124157555, 16.895182581470568, 17.044089235761216, 18.347783110907987, 19.547779300974902, 18.2214870728151, 18.601992806142363, 19.01041915832037, 19.47042204376664]
#res37 = [7,7,7,4.78,3.56,2.94,2.6,2.33,2.1,1.72]
#res67 = [7,7,7,4.78,3.56,2.94,2.6,2.33,2.1,1.72]
#res97 = [7,7,7,4.17,3.56,2.94,2.6,2.33,2.1,1.72]